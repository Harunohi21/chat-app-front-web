<div id="main">
  <% provide(:title, "Edit Profile") %>
  <div class="container para">
    <div class="col-md-6 col-md-offset-4">
      <h1>Edit Profile</h1>
      <br>
      <%= form_for @m_usering, url: { controller: "m_users", action: "updateuser", id: session[:current_user_id] }, method: :patch do |f| %>
        <%= render "shared/error_messages", object: f.object %>

        <div class="flash-messages">
          <% if flash[:success].present? %>
            <div class="alert alert-success">
              <%= flash[:success] %>
            </div>
          <% end %>

          <% if flash[:danger].present? %>
            <div class="alert alert-danger">
              <%= flash[:danger] %>
            </div>
          <% end %>
        </div>

        <div class="avatar-container">
          <% if @m_usering.profile_image_url.present? %>
            <div class="avatar-wrapper">
              <%= image_tag @m_usering.profile_image_url, class: "avatar" %>
              <div class="edit-icon" onclick="document.getElementById('profile_image_input').click();">
                <i class="fas fa-pencil-alt"></i>
              </div>
            </div>
          <% else %>
            <div class="avatar-placeholder" onclick="document.getElementById('profile_image_input').click();">
              <i class="fas fa-plus"></i>
            </div>
          <% end %>
        </div>
        <%= f.file_field :profile_image, id: "profile_image_input", style: "display: none; " %>
        <br>

        <%= f.label :email %>
        <div>
          <%= @m_usering.email %>
        </div>
        <br>
        <%= f.label :workspacename %>
        <div>
          <%= @workspace_name %>
        </div>
        <br>
        <%= f.label :name %>
        <%= f.text_field :username, class: "form-control", value: @m_user %>
        <%= f.submit "Update", class: "btn btn-primary" %>
      <% end %>
    </div>
  </div>
</div>
<div>
  <%= render "leftpanel/leftpanel" %>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function() {
    const fileInput = document.getElementById('profile_image_input');
    const avatarPlaceholder = document.querySelector('.avatar-placeholder');

    fileInput.addEventListener('change', function(event) {
      const file = event.target.files[0];
      if (file) {
        // Check file type
        const allowedTypes = ['image/jpeg', 'image/png', 'image/jpg'];
        if (!allowedTypes.includes(file.type)) {
          console.error('The format is not supported.');
          // Optionally, display an error message to the user
          $('.flash-messages').html('<div class="alert alert-danger">The format is not supported. Please upload an image (jpg, png, jpeg).</div>');
          return;
        }
        const reader = new FileReader();

        reader.onloadend = function(e) {
          const img = new Image();

          img.onload = function() {
            var width = img.naturalWidth;
            var height = img.naturalHeight;
            console.log(`Original Width: ${width}, Original Height: ${height}`);

              if (width > 500 || height > 500) {
                if (width > height) {
                  var scaleFactor = 500 / width;
                  width = 500;
                  height = height * scaleFactor;
                } else {
                  var scaleFactor = 500 / height;
                  height = 500;
                  width = width * scaleFactor;
                }
              }
            img.width = width;
            img.height = height;

            var canvas = document.createElement('canvas');
            canvas.width = width;
            canvas.height = height;
            var ctx = canvas.getContext('2d');

            // Draw the resized image on the canvas
            ctx.drawImage(img, 0, 0, width, height);

            // Convert the canvas to a Base64 string
            var resizedDataUrl = canvas.toDataURL(file.type);
            var base64Data = resizedDataUrl.split(',')[1];
            console.log(`Resized Width: ${width}, Resized Height: ${height}`);

            const mimeType = file.type;
            const requestBody = {
              user_id: '<%= session[:current_user_id] %>',
              image: {
                data: base64Data,
                mime: mimeType
              }
            };

            $.ajax({
              url: '<%= profile_upload_path %>',
              type: 'POST',
              data: JSON.stringify(requestBody),
              contentType: 'application/json',
              headers: {
                'X-CSRF-Token': '<%= form_authenticity_token %>'
              },
              success: function(response) {
                location.reload();
              },
              error: function(xhr, status, error) {
                console.error('Error:', error);
              }
            }).done(function(response) {
              const flashMessage = response.message;
              if (response.success) {
                $('.flash-messages').html('<div class="alert alert-success">' + flashMessage + '</div>');
              } else {
                $('.flash-messages').html('<div class="alert alert-danger">' + flashMessage + '</div>');
              }
            });
          };

          img.onerror = function() {
            console.error('Error loading image');
          };

          img.src = e.target.result; // Set image source for loading
        };

        reader.onerror = function() {
          console.error('Error reading file');
        };

        reader.readAsDataURL(file); // Read the file as a Data URL
      }
    });
  });
</script>


